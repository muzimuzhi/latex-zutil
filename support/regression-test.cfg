\ExplSyntaxOn

%%
%% hacks to get an engine-neutral error-like message type
%%

% define new message level "errorx"
% It works like "info" but uses "Package ... Error" header.
\cs_new_protected:Npn \__msg_errorx_code:nnnnnn #1#2#3#4#5#6
  {
    \test_gincr_error_cnt:
    \__msg_info_aux:NNnnnnnn \iow_term:n \msg_errorx_text:n
      {#1} {#2} {#3} {#4} {#5} {#6}
  }

\prop_new:N \l__msg_redirect_errorx_prop

\cs_new:Npn \msg_errorx_text:n { !~\msg_error_text:n }

%%
%% hacks to count number of errors
%%

\int_new:N \g__test_error_cnt_int
\cs_new_protected:Npn \test_gincr_error_cnt:
  {
    \int_gincr:N \g__test_error_cnt_int
  }

\cs_new_eq:NN \__test_errmessage_old:n \errmessage
\cs_new_protected:Npn \__test_errmessage_new:n
  {
    \test_gincr_error_cnt:
    \__test_errmessage_old:n
  }


\cs_gset_eq:NN \errmessage       \__test_errmessage_new:n
\cs_gset_eq:NN \tex_errmessage:D \__test_errmessage_new:n

\cs_new_protected:Npn \test_log_error_count:
  {
    \iow_term:e
      {
        [test]~ \int_use:N \g__test_error_cnt_int \c_space_tl error(s)~encountered.
      }
  }

% patch commands to auto envoke \test_log_error_count: near the end of a test

% Log lines written in \@@@end used in \END are always ignored, because
% \@@@end is called after "END-TEST-LOG" is written, thus we cannot
% patch the dynamically used \@@@end, but only the statically-\let \END.
%
% Cmd hooks (i.e. "cmd/END/before") used in the preamble delayes the real
% patching to \begin{document}, more precisely in
% \@kernel@after@begindocument used right after the begindocument hook.
\cs_new_eq:NN \test_END_orig: \END
\cs_gset_protected:Npn \END
  {
    \test_log_error_count_at_end:
    \test_END_orig:
  }
\cs_gset_protected:Npn \test_log_error_count_at_end:
  {
    % \OMIT ... \TIMO are not nestable, so unpaired \TIMO is valid use.
    \TIMO
    \iow_term:n { *************** } % emulate l3build "recordstatus = true"
    \test_log_error_count:
  }

% update \END aliases, copied from regression-test.tex
% \end{document} calls \@@end thus is covered
\ifx\@@end\@undefined
  \let\end\END
\else
  \let\@@end\END
\fi

%% TODO: following works for fatal errors, but not for critical errors
%%       as the latter call \tex_endinput:D.

% % fatal errors "force a bail out" immediately, without calling \END,
% % thus need to be patched too
% \cs_new_eq:NN \test__msg_fatal_exit: \__msg_fatal_exit:
% \cs_gset_protected:Npn \__msg_fatal_exit:
%   {
%     \test_log_error_count_at_end:
%     \__msg_fatal_exit:
%   }


%%
%% end of hacks
%%

% redirect errors of modules under my control
\msg_redirect_module:nnn { zutil }      { error } { errorx }
\msg_redirect_module:nnn { tabularray } { error } { errorx }

% it's recommended to load l3backend-<engine>.def as early as possible
\sys_ensure_backend:

% enable first use of \debug_on:n after preamble
% see https://github.com/latex3/latex3/issues/1442
\hook_gput_code:nnn { begindocument } { test }
  { \sys_load_debug: }

% trigger font info lines
\setbox0=\hbox{$a$}

\ExplSyntaxOff
