
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Generated from tabularray-4ht.tex with tex-to-4ht.lua
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% --------------------------------------------------------
%%% for tex4ht-4ht.tex to update tabularray.4ht file
%%% --------------------------------------------------------

\UseTblrLibrary{hook,html}
\NewConfigure{tabularray}{8}
\NewConfigure{tabularrayignoredcell}{2}
\NewConfigure{tabularrayattributes}[1]{\concat:config\CellAttributes{#1\space}}
\NewConfigure{tabularraystyles}[1]{\concat:config\CellStyle{#1}}
\NewConfigure{tabularraycolumnwidth}{1}

\ExplSyntaxOn
\NewConfigure{tabularrayhalign}[2]{%
  \cs_set:cpn{tabularray_halign:#1}{#2}
}

\NewConfigure{tabularrayvalign}[2]{%
  \cs_set:cpn{tabularray_valign:#1}{#2}
}
\ExplSyntaxOff

\ExplSyntaxOn
\AddToHook{tabularray/table/before}{\a:tabularray}
\AddToHook{tabularray/table/after}{\b:tabularray}

\AddToHook{tabularray/row/before}{\xdef\HRow{\@arabic\c@rownum}\c:tabularray}
\AddToHook{tabularray/row/after}{\d:tabularray}
\ExplSyntaxOff

% disable rules
\ht:special{t4ht@_}

\ExplSyntaxOn
% #1 tabularray border position, #2 css property to be set
\def\:tblr:linestyle#1#2{
  % create CSS only when a dash style is set 
  \tl_if_empty:cF {lTblrCell#1BorderStyleTl}{
    \def\:hlinecolor{\#000000}
    % convert color to CSS value if color is set
    \tl_if_empty:cF{lTblrCell#1BorderColorTl}{
      \get:xcolorcss{\use:c{lTblrCell#1BorderColorTl}}\:hlinecolor
    }
    % \Configure{tabularraystyles} doesn't expand attributes, so we need to expand it here
    % otherwise, we would get wrong color and hline style in the last row, because this macro is called twice here
    \cs_set:cx{#2:}{
      #2:\dim_to_decimal_in_unit:nn{\use:c{lTblrCell#1BorderWidthTl}*2}{1px}px~
      \use:c{lTblrCell#1BorderStyleTl}\space~\:hlinecolor;
    }
    \Configure{tabularraystyles}{\csname#2:\endcsname}
  }
}
\ExplSyntaxOff

\ExplSyntaxOn
\AddToHook{tabularray/cell/before}{
  \xdef\HCol{\@arabic\c@colnum}
  \xdef\HRow{\@arabic\c@rownum}
  \xdef\HMultispan{\lTblrCellColSpanTl}
  \xdef\HRowspan{\lTblrCellRowSpanTl}
  \let\CellAttributes\@empty
  \let\CellStyle\@empty
  \cs_if_exist_use:c{tabularray_halign:\g__tblr_cell_halign_tl}
  \cs_if_exist_use:c{tabularray_valign:\g__tblr_cell_valign_tl}
  % the vertical alignment can be set also in \g__tblr_cell_middle_tl, so we should try it as well
  \cs_if_exist_use:c{tabularray_valign:\g__tblr_cell_middle_tl}
  % calculate column width
  \dim_compare:nNnT {\__tblr_data_item:nen{column}{\HCol}{@col-width}} > {0pt}{
    \__tblr_get_table_width:% initialize \tablewidth
    \edef\HColWidth{\fp_eval:n{\__tblr_data_item:nen{column}{\HCol}{@col-width}/\tablewidth*100}\%}
    % save table width, preferably in CSS
    \a:tabularraycolumnwidth%
  }
  % support for hlines and vlines
  \:tblr:linestyle{Above}{border-top}
  \:tblr:linestyle{Below}{border-bottom}
  \:tblr:linestyle{Left}{border-left}
  \:tblr:linestyle{Right}{border-right}
  % support for the background color
  % save background color to the list of CSS, if it is set
  \tl_if_empty:NF \lTblrCellBackgroundTl{
    \get:xcolorcss{\lTblrCellBackgroundTl}\:bgcolor
    \Configure{tabularraystyles}{background-color: \:bgcolor;}
  }
  % We can use something like \Configure{tabularrayattributes}{rowspan="\HRowspan"} in \Configure{tabularray}
  % to declare correct attributes for joined cells
  \int_compare:nNnT {\HRowspan} > {1}{\g:tabularray}
  \int_compare:nNnT {\HMultispan} > {1}{\h:tabularray}
  \bool_if:NT \lTblrCellOmittedBool {\a:tabularrayignoredcell}
  \e:tabularray
}
\AddToHook{tabularray/cell/after}{
  \f:tabularray
  \bool_if:NT \lTblrCellOmittedBool {\b:tabularrayignoredcell}
}

\ExplSyntaxOff

%%% --------------------------------------------------------
%%% for tex4ht-html4.tex to update html4.4ht file
%%% --------------------------------------------------------

\Configure{tabularray}{
  \ifvmode\IgnorePar\fi\EndP
  \gHAdvance\Next:TableNo by 1 \global\let\TableNo=\Next:TableNo%
  \HCode{<table class="tabularray \@currenvir" id="tbl-\TableNo">}
}{\ifvmode\IgnorePar\fi\EndP\HCode{</table>}}
{\HCode{<tr id="row-\TableNo-\HRow">}}{\HCode{</tr>}}
{\HCode{<td id="cell-\TableNo-\HRow-\HCol" style="\CellStyle" \CellAttributes>}}{\HCode{</td>}}
{\Configure{tabularrayattributes}{rowspan="\HRowspan"}}
{\Configure{tabularrayattributes}{colspan="\HMultispan"}}{}

% cells hidden by cell and row spans. they shouldn't be included in HTML, so we hide them using comments
\Configure{tabularrayignoredcell}{\HCode{<!-- ignored cell: }}{\HCode{ -->}}

% this is a default alignment, so we can ignore it, to save some space in the generated files
% \Configure{tabularrayhalign}{l}{\Configure{tabularraystyles}{text-align:left;}}
\Configure{tabularrayhalign}{r}{\Configure{tabularraystyles}{text-align:right;}}
\Configure{tabularrayhalign}{c}{\Configure{tabularraystyles}{text-align:center;}}
\Configure{tabularrayhalign}{j}{\Configure{tabularraystyles}{text-align:justify;}}

% this is a default alignment, so we can ignore it, to save some space in the generated files
% \Configure{tabularrayvalign}{m}{\Configure{tabularraystyles}{vertical-align:middle;}}
\Configure{tabularrayvalign}{h}{\Configure{tabularraystyles}{vertical-align:top;}}
\Configure{tabularrayvalign}{p}{\Configure{tabularraystyles}{vertical-align:top;}}
\Configure{tabularrayvalign}{f}{\Configure{tabularraystyles}{vertical-align:bottom;}}
% the vertical alignment of the following two is not correct, but CSS doesn't support the correct one
\Configure{tabularrayvalign}{t}{\Configure{tabularraystyles}{vertical-align:top;}}
\Configure{tabularrayvalign}{b}{\Configure{tabularraystyles}{vertical-align:bottom;}}

% Save column width only on the first row
\Configure{tabularraycolumnwidth}{\ifnum\HRow=1\Css{\#tbl-\TableNo\space td:nth-child(\HCol){width:\HColWidth;}}\fi}
\Css{table.tabularray{table-layout: fixed;border-collapse:collapse;margin:0.3em 0;}}
