This is a generated file for the l3build validation system.
Don't change this file in any respect.
============================================================
TEST: \zutil_cs_if_defined:NTF 
============================================================
[test] 3 tests passed.
============================================================
============================================================
TEST: \zutil_cs_if_defined:cTF 
============================================================
[test] 3 tests passed.
============================================================
============================================================
TEST: \zutil_cs_ensure_variant:N 
============================================================
[before] undefined
[after] \protected\long macro:->\exp_args:NV \zutil_set:n 
[before] undefined
[after] \protected\long macro:->\exp_args:NNpo \cs_new:Npn 
============================================================
============================================================
TEST: \zutil_cs_ensure_variant:N invalid specifier
============================================================
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! Package zutil Error: Invalid argument specifier 'w'.
l. ...}
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! LaTeX Error: Variant form 'wc' deprecated for base form '\exp_after:wN'. One should not change an argument from type 'w' to type 'w': base form is already a variant.
Type <return> to continue.
 ...                                              
l. ...}
LaTeX does not know anything more about this error, sorry.
Try typing <return> to proceed.
If that doesn't work, type X <return> to quit.
! Use of \??? doesn't match its definition.
<argument> \???  
                 ! Package zutil Error: Invalid argument specifier 'X'.
l. ...}
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.
! LaTeX Error: Control sequence \zutil_set:X undefined.
For immediate help type H <return>.
 ...                                              
l. ...}
This is a coding error.
LaTeX has been asked to use a control sequence '\zutil_set:X':
this has not been defined yet.
[test] 4 error(s) encountered in this test.
============================================================
============================================================
TEST: \zutil_prg_new_conditional_tl_if_in:Nnn 
============================================================
[test] 4 tests passed.
============================================================
============================================================
TEST: \tl_trim_spaces:n 
============================================================
>>ab c<<
>>\use:n {ab c }<<
>>{a}<<
>>{ a }<<
>>\c_space_token a\c_space_token <<
>>\c_space_token  a \c_space_token <<
>>!aA<<
>>! a A<<
>>\c_space_tl a \c_space_tl <<
>>a<<
>>{a}<<
>>\use:n {\ERROR }<<
============================================================
============================================================
TEST: \zutil_tl_trim_leading_spaces:n 
============================================================
>>ab c <<
>>\use:n {ab c } <<
>>{a} <<
>>{ a } <<
>>\c_space_token a\c_space_token <<
>>\c_space_token  a \c_space_token  <<
>>!aA<<
>>! a A <<
>>\c_space_tl a \c_space_tl <<
>>a  <<
>>{a}  <<
>>\use:n {\ERROR } <<
============================================================
============================================================
TEST: \zutil_tl_trim_trailing_spaces:n 
============================================================
>> ab c<<
>> \use:n {ab c }<<
>> {a}<<
>> { a }<<
>>\c_space_token a\c_space_token <<
>> \c_space_token  a \c_space_token <<
>>!aA<<
>> ! a A<<
>> \c_space_tl a \c_space_tl <<
>>  a<<
>>  {a}<<
>> \use:n {\ERROR }<<
============================================================
============================================================
TEST: \tl_trim_spaces_apply:nN 
============================================================
>>\use:n { ab c }<<
>> ab c <<
============================================================
============================================================
TEST: \zutil_tl_trim_leading_spaces_apply:nN 
============================================================
>>\use:n { ab c } <<
>> ab c  <<
============================================================
============================================================
TEST: \zutil_tl_trim_trailing_spaces_apply:nN 
============================================================
>> \use:n { ab c }<<
>>  ab c <<
============================================================
============================================================
TEST: \zutil_seq_set_split_keep_braces:Nnn 
============================================================
The sequence \l_tmpa_seq contains the items (without outer braces):
>  {}.
The sequence \l_tmpa_seq contains the items (without outer braces):
>  {a}
>  {}.
The sequence \l_tmpa_seq contains the items (without outer braces):
>  {a}
>  {b}.
The sequence \l_tmpa_seq contains the items (without outer braces):
>  {a}
>  {b}
>  {c}
>  {{|}}
>  {{ |{} }}
>  {d}
>  {{e}e}
>  {\ERROR }
>  {}.
The sequence \l_tmpa_seq contains the items (without outer braces):
>  {Hello,}
>  {world,}
>  {my}
>  {name}
>  {is}
>  {LaTeX!}.
============================================================
============================================================
TEST: gset
============================================================
The sequence \g_tmpa_seq contains the items (without outer braces):
>  {a}
>  {b}
>  {c}
>  {{|}}
>  {{ |{} }}
>  {d}
>  {{e}e}
>  {\ERROR }
>  {}.
============================================================
============================================================
TEST: Empty delimiter
============================================================
! Package zutil Error: Empty delimiter is not supported in \zutil_seq_set_split_keep_braces:Nnn .
(zutil)                The existing definition of '\l_tmpa_seq ' will not be altered.
The sequence \l_tmpa_seq is empty
> .
! Package zutil Error: Empty delimiter is not supported in \zutil_seq_gset_split_keep_braces:Nnn .
(zutil)                The existing definition of '\g_tmpa_seq ' will not be altered.
The sequence \g_tmpa_seq is empty
> .
[test] 2 error(s) encountered in this test.
============================================================
***************
[test] 6 error(s) encountered.
