name: Checks
# example `run-name`s:
#     - Checks (ubuntu-latest)
#     - Checks (schedule, windows-latest)
#     - <empty>, which falls back to the default value
run-name: ${{ github.event_name == 'workflow_dispatch' && (inputs.event-name != 'workflow_dispatch' && format('Checks ({0}, {1})', inputs.event-name, inputs.runs-on) || format('Checks ({0})', inputs.runs-on)) || '' }}

on:
  pull_request:
    types:
      # added "ready_for_review"
      # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
      [opened, ready_for_review, reopened, synchronize]
  push:
    paths-ignore:
      - ".pre-commit-config.yaml"
  workflow_dispatch:
    inputs:
      event-name:
        description: "Event name, used by dispatched scheduled runs"
        required: false
        type: string
        default: "workflow_dispatch"
      runs-on:
        description: "Image to run on"
        required: false
        type: choice
        options:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        default: ubuntu-latest
      update-cache:
        description: "If update the TeX live cache"
        required: false
        type: boolean
        default: false
  # scheduled runs are dispatched from the `schedule.yml` workflow

jobs:
  tests:
    strategy:
      matrix:
        tblr-config: ["build", "config-old"]
        # TODO: find a way to handle different testfiles when checking
        #       with latex and latex-dev
        # options: ["", "--dev"]
        options: [""]
    name: "Tests: ${{ matrix.tblr-config }}\
      ${{ matrix.options != '' && ' (latex-dev)' || '' }}"
    runs-on: ${{ github.event_name == 'workflow_dispatch' && inputs.runs-on || 'ubuntu-latest' }}
    permissions:
      # required for for "gh cache delete"
      # https://docs.github.com/en/rest/actions/cache?apiVersion=2022-11-28#delete-a-github-actions-cache-for-a-repository-using-a-cache-id
      actions: write

    steps:
    - uses: actions/checkout@v4

    - name: Delete TeX Live cache(s)
      if: inputs.update-cache
      continue-on-error: true
      # https://cli.github.com/manual/gh_cache_list
      # https://cli.github.com/manual/gh_cache_delete
      run: |
        # TODO: find why 'cache_keys' might contain dup items
        set -x
        cache_keys=$(\
            gh cache list --key setup-texlive --json key --jq '.[].key')
        for key in $cache_keys; do
            echo "Deleting cache \"$key\""
            gh cache delete "$key"
        done
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup TeX Live
      uses: teatimeguest/setup-texlive-action@v3
      with:
        package-file: .github/tl_packages
        update-all-packages: true

    - name: Install just
      uses: extractions/setup-just@v3

    # imagemagick is pre-installed on Ubuntu 22.04 image
    # https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2204-Readme.md#installed-apt-packages
    - name: Install ppmcheckpdf dependencies (ubuntu)
      if: matrix.tblr-config == 'config-old' && runner.os == 'Linux'
      # actively maintained
      uses: gerlero/apt-install@v1
      with:
        packages: imagemagick poppler-utils

    # imagemagick is pre-installed on windows-2022 image
    # https://github.com/actions/runner-images/blob/main/images/windows/Windows2022-Readme.md
    - name: Install ppmcheckpdf dependencies (windows)
      if: matrix.tblr-config == 'config-old' && runner.os == 'Windows'
      run: |
        tlmgr install wintools.windows

    - name: Install ppmcheckpdf dependencies (macos)
      if: matrix.tblr-config == 'config-old' && runner.os == 'macOS'
      run: |
        brew install imagemagick poppler

    - name: Run zutil tests
      if: matrix.tblr-config == 'build'
      run: |
        just zutil ${{ matrix.options }}
      env:
        L3BUILD_CHECK_OPTIONS: "--halt-on-error --show-saves"

    - name: Run tabularray tests, config "${{ matrix.tblr-config }}"
      run: |
        just test tabularray "${{ matrix.tblr-config }}" ${{ matrix.options }}
      env:
        L3BUILD_CHECK_OPTIONS: "--halt-on-error --show-saves"

    # TODO: generate a list of files related to failed tests, then
    # upload all of them (.tex, .log, .pdf, .png, .md5, etc.)
    - name: Upload diff files
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        # example names:
        #   - zutil-diffs
        #   - zutil-diffs-dev
        #   - zutil-diffs-config-old
        #   - zutil-diffs-config-old-dev
        name: "zutil-diffs\
          ${{ matrix.tblr-config != '' && format('-{0}', matrix.tblr-config) || '' }}\
          ${{ matrix.options != '' && '-dev' || '' }}"
        # l3build is configured to use OS-independent diff file extension
        path: |
          build/**/*.diff
          build/**/*.diff.png
